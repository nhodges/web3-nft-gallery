import { useEffect, useState } from 'react';

import Head from 'next/head'
import Image from 'next/image'
import { useRouter } from 'next/router'

import styles from '../../styles/Home.module.css'

import { FEATURED_COLLECTIONS } from '../../lib/constants/collections';

import { ethers } from 'ethers'
import { json } from 'body-parser';

const simplified_abi = [
    {
        'inputs': [{ 'internalType': 'address', 'name': 'owner', 'type': 'address' }],
        'name': 'balanceOf',
        'outputs': [{ 'internalType': 'uint256', 'name': '', 'type': 'uint256' }],
        'payable': false, 'stateMutability': 'view', 'type': 'function', 'constant': true
    },
    {
        'inputs': [],
        'name': 'name',
        'outputs': [{ 'internalType': 'string', 'name': '', 'type': 'string' }],
        'stateMutability': 'view', 'type': 'function', 'constant': true
    },
    {
        'inputs': [{ 'internalType': 'uint256', 'name': 'tokenId', 'type': 'uint256' }],
        'name': 'ownerOf',
        'outputs': [{ 'internalType': 'address', 'name': '', 'type': 'address' }],
        'payable': false, 'stateMutability': 'view', 'type': 'function', 'constant': true
    },
    {
        'inputs': [],
        'name': 'symbol',
        'outputs': [{ 'internalType': 'string', 'name': '', 'type': 'string' }],
        'stateMutability': 'view', 'type': 'function', 'constant': true
    },
    {
        'inputs': [],
        'name': 'totalSupply',
        'outputs': [{ 'internalType': 'uint256', 'name': '', 'type': 'uint256' }],
        'stateMutability': 'view', 'type': 'function', 'constant': true
    },
]

const contractABI = [
    "function tokenURI(uint256 _tokenId) external view returns (string memory)",
];

export default function Collection() {

    useEffect(async () => {

        const slug = window.location.pathname.split('/').pop()
        const collectionAddress = FEATURED_COLLECTIONS[slug]

        if (typeof window !== 'undefined') {
            let provider
            let signer
            if (typeof window.ethereum !== 'undefined') {
                window.ethereum.enable()
                provider = new ethers.providers.Web3Provider(window.ethereum);
                signer = provider.getSigner();

            }

            let ctx = new ethers.Contract(collectionAddress, contractABI, signer)

            let response;

            response = await ctx2.tokenURI(i)

            const metadataUri = response.replace("ipfs://", "https://ipfs.io/ipfs/")

            let httpResponse = await fetch(metadataUri, {
                method: 'GET',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json',
                    'mode': 'cors'
                }
                // body: JSON.stringify({a: 1, b: 'Textual content'})
            })

            const metadata = await httpResponse.json()

            const node = {
                id: i,
                attributes: metadata.attributes,
                image: metadata.image.replace("ipfs://", "https://ipfs.io/ipfs/")
            }

            console.log('>>> node', node)

            // await internals.fetchStakingBalance(setStakingBalance, setTotalCollateral)
            // window.location.hash = ''
        }


    }, [startIndex])

    // todo:
    // - detect https://medium.com/knownorigin/eip-2981-simple-and-effective-royalty-standards-for-all-dbd0b761a0f0

    return (
        <div className={styles.container}>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className={styles.main}>
                <h1 className={styles.title}>
                    Welcome to <a href="https://nextjs.org">Next.js!</a>
                </h1>

                <p className={styles.description}>
                    Get started by editing{' '}
                    <code className={styles.code}>pages/index.js</code>
                </p>

                <div>
                    <button onClick={() => { setStartIndex(startIndex + 3); }}>Next Page</button>
                </div>

                <div key={startIndex} className={styles.grid}>
                    {collection && collection.map(node => {
                        console.log('node id', node.id)
                        console.log(node.attributes)
                        return (
                            <a key={node.id} href="#" className={styles.card}>
                                <h2>Mutant Ape Yacht Club #{node.id} &rarr;</h2>
                                <img src={node.image} />
                                {node.attributes.length > 0 && node.attributes.map(attribute => {
                                    return (
                                        <div key={`${attribute.trait_type}`}>{attribute.trait_type}: {attribute.value}</div>
                                    )
                                })}
                                {/* <p><pre>{JSON.stringify(node, 1, 2)}</pre></p> */}
                            </a>
                        )
                    })}
                </div>
            </main>

            <footer className={styles.footer}>
                <a
                    href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
                    target="_blank"
                    rel="noopener noreferrer"
                >
                    Powered by{' '}
                    <span className={styles.logo}>
                        <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
                    </span>
                </a>
            </footer>
        </div>
    )
}
